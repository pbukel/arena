{"ast":null,"code":"var _jsxFileName = \"/Users/oila/Documents/Mokymai_TypeScript/TS10/TypeScript/12_paskaita_React/REACT/src/pages/SingleUserPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useContext } from \"react\";\nimport mainContext from \"../context/mainContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addChatsforlogedUserifEmplty } from \"../features/users\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SingleUserPage() {\n  _s();\n\n  const {\n    setMessages,\n    setMsgIndex,\n    setChatingUser\n  } = useContext(mainContext);\n  const nav = useNavigate();\n  const dispatch = useDispatch();\n  const {\n    username\n  } = useParams();\n  const alluseriai = useSelector(state => state.users.value.users);\n  const logedUser = useSelector(state => state.users.value.loggedUser);\n  const selected_user = alluseriai.filter(x => x.username === username);\n  const allMymessage = logedUser.chats.filter(x => x.id === selected_user[0].id);\n  const msgIndex = logedUser.chats.findIndex(x => x.id === selected_user[0].id);\n\n  function startChat() {\n    // console.log(allMymessage[0].messages);\n    // setModal(true);\n    // console.log(allMymessage);\n    if (allMymessage.length > 0) {\n      console.log(allMymessage);\n      setMessages(allMymessage[0].messages);\n      setMsgIndex(msgIndex);\n    } else {\n      const newData = {\n        data: {\n          id: selected_user[0].id,\n          name: selected_user[0].username,\n          messages: []\n        }\n      };\n      console.log(selected_user);\n      dispatch(addChatsforlogedUserifEmplty(newData));\n      setMessages([]);\n      setMsgIndex(0);\n    } // console.log(selected_user[0]);\n\n\n    setChatingUser(selected_user[0]);\n    console.log(selected_user[0]);\n    nav(\"/chat\"); // console.log(msgIndex);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selected_user\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: selected_user[0].photo,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: selected_user[0].username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startChat,\n      children: \"START CHATTING\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleUserPage, \"9r0alIw930YzKNIyYSQ+ZV/KpH8=\", false, function () {\n  return [useNavigate, useDispatch, useParams, useSelector, useSelector];\n});\n\n_c = SingleUserPage;\nexport default SingleUserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleUserPage\");","map":{"version":3,"names":["React","useParams","useSelector","useDispatch","useContext","mainContext","useNavigate","addChatsforlogedUserifEmplty","SingleUserPage","setMessages","setMsgIndex","setChatingUser","nav","dispatch","username","alluseriai","state","users","value","logedUser","loggedUser","selected_user","filter","x","allMymessage","chats","id","msgIndex","findIndex","startChat","length","console","log","messages","newData","data","name","photo"],"sources":["/Users/oila/Documents/Mokymai_TypeScript/TS10/TypeScript/12_paskaita_React/REACT/src/pages/SingleUserPage.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useContext } from \"react\";\nimport mainContext from \"../context/mainContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addChatsforlogedUserifEmplty } from \"../features/users\";\n\nfunction SingleUserPage() {\n  const {\n    setMessages,\n\n    setMsgIndex,\n\n    setChatingUser,\n  } = useContext(mainContext);\n  const nav = useNavigate();\n  const dispatch = useDispatch();\n\n  const { username } = useParams();\n  const alluseriai = useSelector((state) => state.users.value.users);\n  const logedUser = useSelector((state) => state.users.value.loggedUser);\n  const selected_user = alluseriai.filter((x) => x.username === username);\n  const allMymessage = logedUser.chats.filter(\n    (x) => x.id === selected_user[0].id\n  );\n  const msgIndex = logedUser.chats.findIndex(\n    (x) => x.id === selected_user[0].id\n  );\n\n  function startChat() {\n    // console.log(allMymessage[0].messages);\n    // setModal(true);\n    // console.log(allMymessage);\n    if (allMymessage.length > 0) {\n      console.log(allMymessage);\n      setMessages(allMymessage[0].messages);\n      setMsgIndex(msgIndex);\n    } else {\n      const newData = {\n        data: {\n          id: selected_user[0].id,\n          name: selected_user[0].username,\n          messages: [],\n        },\n      };\n      console.log(selected_user);\n      dispatch(addChatsforlogedUserifEmplty(newData));\n      setMessages([]);\n      setMsgIndex(0);\n    }\n\n    // console.log(selected_user[0]);\n\n    setChatingUser(selected_user[0]);\n    console.log(selected_user[0]);\n    nav(\"/chat\");\n    // console.log(msgIndex);\n  }\n\n  return (\n    <div className=\"selected_user\">\n      <img src={selected_user[0].photo} alt=\"\" />\n      <h1>{selected_user[0].username}</h1>\n      <button onClick={startChat}>START CHATTING</button>\n      {/* {modal && <ChatModal index={msgIndex} chating_user={selected_user[0]} />} */}\n    </div>\n  );\n}\n\nexport default SingleUserPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}