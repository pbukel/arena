{"ast":null,"code":"var _jsxFileName = \"/Users/oila/Documents/Mokymai_TypeScript/TS10/TypeScript/12_paskaita_React/REACT/src/pages/GamePage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Hash from \"../components/Hash\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GamePage(_ref) {\n  _s();\n\n  let {\n    word,\n    setWord\n  } = _ref;\n  const inLetter = useRef();\n\n  function guessing() {\n    console.log(inLetter.current.value);\n    const guessing = {\n      letter: inLetter.current.value\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(guessing)\n    };\n    fetch(\"http://localhost:4000/guessing\", options).then(res => res.json()).then(data => {\n      if (!data.error) {\n        let tarpinis = word;\n        tarpinis[data.index] = inLetter.current.value;\n        console.log(tarpinis);\n      }\n\n      console.log(data);\n    });\n    inLetter.current.value = \"\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-20 m-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all_hashes\",\n      children: word.map((x, i) => /*#__PURE__*/_jsxDEV(Hash, {\n        leter: x\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inLetter,\n        type: \"text\",\n        name: \"\",\n        id: \"\",\n        placeholder: \"leter\",\n        maxLength: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: guessing,\n        children: \"GUESS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GamePage, \"C59OjQJ56nk1dNpE4uL2JqAUJeg=\");\n\n_c = GamePage;\nexport default GamePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","Hash","useRef","GamePage","word","setWord","inLetter","guessing","console","log","current","value","letter","options","method","headers","body","JSON","stringify","fetch","then","res","json","data","error","tarpinis","index","map","x","i"],"sources":["/Users/oila/Documents/Mokymai_TypeScript/TS10/TypeScript/12_paskaita_React/REACT/src/pages/GamePage.js"],"sourcesContent":["import React from \"react\";\nimport Hash from \"../components/Hash\";\nimport { useRef } from \"react\";\n\nfunction GamePage({ word, setWord }) {\n  const inLetter = useRef();\n  function guessing() {\n    console.log(inLetter.current.value);\n\n    const guessing = {\n      letter: inLetter.current.value,\n    };\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(guessing),\n    };\n\n    fetch(\"http://localhost:4000/guessing\", options)\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data.error) {\n          let tarpinis = word;\n          tarpinis[data.index] = inLetter.current.value;\n          console.log(tarpinis);\n        }\n        console.log(data);\n      });\n\n    inLetter.current.value = \"\";\n  }\n  return (\n    <div className={\"p-20 m-auto\"}>\n      <div className=\"all_hashes\">\n        {word.map((x, i) => (\n          <Hash leter={x} key={i} />\n        ))}\n      </div>\n      <div>\n        <input\n          ref={inLetter}\n          type=\"text\"\n          name=\"\"\n          id=\"\"\n          placeholder=\"leter\"\n          maxLength=\"1\"\n        />\n        <button onClick={guessing}>GUESS</button>\n      </div>\n    </div>\n  );\n}\n\nexport default GamePage;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,MAAT,QAAuB,OAAvB;;;AAEA,SAASC,QAAT,OAAqC;EAAA;;EAAA,IAAnB;IAAEC,IAAF;IAAQC;EAAR,CAAmB;EACnC,MAAMC,QAAQ,GAAGJ,MAAM,EAAvB;;EACA,SAASK,QAAT,GAAoB;IAClBC,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,OAAT,CAAiBC,KAA7B;IAEA,MAAMJ,QAAQ,GAAG;MACfK,MAAM,EAAEN,QAAQ,CAACI,OAAT,CAAiBC;IADV,CAAjB;IAIA,MAAME,OAAO,GAAG;MACdC,MAAM,EAAE,MADM;MAEdC,OAAO,EAAE;QACP,gBAAgB;MADT,CAFK;MAKdC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,QAAf;IALQ,CAAhB;IAQAY,KAAK,CAAC,gCAAD,EAAmCN,OAAnC,CAAL,CACGO,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;MACd,IAAI,CAACA,IAAI,CAACC,KAAV,EAAiB;QACf,IAAIC,QAAQ,GAAGrB,IAAf;QACAqB,QAAQ,CAACF,IAAI,CAACG,KAAN,CAAR,GAAuBpB,QAAQ,CAACI,OAAT,CAAiBC,KAAxC;QACAH,OAAO,CAACC,GAAR,CAAYgB,QAAZ;MACD;;MACDjB,OAAO,CAACC,GAAR,CAAYc,IAAZ;IACD,CATH;IAWAjB,QAAQ,CAACI,OAAT,CAAiBC,KAAjB,GAAyB,EAAzB;EACD;;EACD,oBACE;IAAK,SAAS,EAAE,aAAhB;IAAA,wBACE;MAAK,SAAS,EAAC,YAAf;MAAA,UACGP,IAAI,CAACuB,GAAL,CAAS,CAACC,CAAD,EAAIC,CAAJ,kBACR,QAAC,IAAD;QAAM,KAAK,EAAED;MAAb,GAAqBC,CAArB;QAAA;QAAA;QAAA;MAAA,QADD;IADH;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAA,wBACE;QACE,GAAG,EAAEvB,QADP;QAEE,IAAI,EAAC,MAFP;QAGE,IAAI,EAAC,EAHP;QAIE,EAAE,EAAC,EAJL;QAKE,WAAW,EAAC,OALd;QAME,SAAS,EAAC;MANZ;QAAA;QAAA;QAAA;MAAA,QADF,eASE;QAAQ,OAAO,EAAEC,QAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GAlDQJ,Q;;KAAAA,Q;AAoDT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}