{"ast":null,"code":"var _jsxFileName = \"/Users/oila/Documents/Mokymai_TypeScript/TS10/TypeScript/12_paskaita_React/REACT/src/pages/UserPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\"; // function check(param) {\n//   const filtered = users.filter((x) => x.username === param);\n//   if (filtered.length === 0) {\n//     return <div className=\"test\">\"USER DO NOT EXIST\"</div>;\n//   } else {\n//     return (\n//       <div className=\"test\">\n//         <div>User name: {filtered[0].username}</div>\n//         <div>Name: {filtered[0].name}</div>\n//         <div>Email: {filtered[0].email}</div>\n//         <div>Phone: {filtered[0].phone}</div>\n//         <div>WEB: {filtered[0].website}</div>\n//       </div>\n//     );\n//   }\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserPage() {\n  _s();\n\n  const user = useParams();\n  const [getPost, setPost] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then(data => {\n      const filtered = data.filter(x => x.id === user.id);\n      console.log(user.id);\n      setPost(filtered);\n      console.log(filtered);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divas\",\n      children: \"hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserPage, \"ynL1rGZa4rzdE9CZRL71E87uPw0=\", false, function () {\n  return [useParams];\n});\n\n_c = UserPage;\nexport default UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useParams","useState","useEffect","UserPage","user","getPost","setPost","fetch","then","res","json","data","filtered","filter","x","id","console","log"],"sources":["/Users/oila/Documents/Mokymai_TypeScript/TS10/TypeScript/12_paskaita_React/REACT/src/pages/UserPage.js"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\n\n// function check(param) {\n//   const filtered = users.filter((x) => x.username === param);\n//   if (filtered.length === 0) {\n//     return <div className=\"test\">\"USER DO NOT EXIST\"</div>;\n//   } else {\n//     return (\n//       <div className=\"test\">\n//         <div>User name: {filtered[0].username}</div>\n//         <div>Name: {filtered[0].name}</div>\n//         <div>Email: {filtered[0].email}</div>\n//         <div>Phone: {filtered[0].phone}</div>\n//         <div>WEB: {filtered[0].website}</div>\n//       </div>\n//     );\n//   }\n// }\n\nfunction UserPage() {\n  const user = useParams();\n  const [getPost, setPost] = useState([]);\n  useEffect(() => {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((res) => res.json())\n      .then((data) => {\n        const filtered = data.filter((x) => x.id === user.id);\n        console.log(user.id);\n        setPost(filtered);\n        console.log(filtered);\n      });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"divas\">hello</div>\n    </div>\n  );\n}\n\nexport default UserPage;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAClB,MAAMC,IAAI,GAAGJ,SAAS,EAAtB;EACA,MAAM,CAACK,OAAD,EAAUC,OAAV,IAAqBL,QAAQ,CAAC,EAAD,CAAnC;EACAC,SAAS,CAAC,MAAM;IACdK,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;MACd,MAAMC,QAAQ,GAAGD,IAAI,CAACE,MAAL,CAAaC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACW,EAAjC,CAAjB;MACAC,OAAO,CAACC,GAAR,CAAYb,IAAI,CAACW,EAAjB;MACAT,OAAO,CAACM,QAAD,CAAP;MACAI,OAAO,CAACC,GAAR,CAAYL,QAAZ;IACD,CAPH;EAQD,CATQ,EASN,EATM,CAAT;EAWA,oBACE;IAAA,uBACE;MAAK,SAAS,EAAC,OAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAnBQT,Q;UACMH,S;;;KADNG,Q;AAqBT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}