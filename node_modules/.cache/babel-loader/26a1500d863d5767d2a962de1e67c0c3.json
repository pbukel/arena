{"ast":null,"code":"var _jsxFileName = \"/Users/oila/Documents/Mokymai_TypeScript/TS10/TypeScript/12_paskaita_React/REACT/src/pages/IndexPage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport SingleProduct from \"../components/SingleProduct\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeName, changePicture } from \"../features/users\";\nimport { useContext, useEffect } from \"react\";\nimport mainContext from \"../context/mainContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction IndexPage(_ref) {\n  _s();\n\n  let {\n    products\n  } = _ref;\n  const {\n    setCount\n  } = useContext(mainContext);\n  const prod2 = useSelector(state => state.products.products); // const username = useSelector((state) => state.users.value[1].username);\n  // const dispatch = useDispatch();\n  // let inImage = useRef();\n  // function changeUserName() {\n  //   const newName = \"Jonas\";\n  //   dispatch(changeName(newName));\n  // }\n  // function changeUserPicture() {\n  //   const newPic = inImage.current.value;\n  //   dispatch(changePicture(newPic));\n  // }\n\n  useEffect(() => {\n    setCount(prod.products.length);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"products\",\n    children: products.map((x, i) => /*#__PURE__*/_jsxDEV(SingleProduct, {\n      item: x\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(IndexPage, \"72Ks+2+vdD+0AAAAVGtCIxvRwVM=\", false, function () {\n  return [useSelector];\n});\n\n_c = IndexPage;\nexport default IndexPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexPage\");","map":{"version":3,"names":["React","SingleProduct","useSelector","useDispatch","changeName","changePicture","useContext","useEffect","mainContext","IndexPage","products","setCount","prod2","state","prod","length","map","x","i"],"sources":["/Users/oila/Documents/Mokymai_TypeScript/TS10/TypeScript/12_paskaita_React/REACT/src/pages/IndexPage.js"],"sourcesContent":["import React from \"react\";\nimport SingleProduct from \"../components/SingleProduct\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeName, changePicture } from \"../features/users\";\nimport { useContext, useEffect } from \"react\";\nimport mainContext from \"../context/mainContext\";\n\nfunction IndexPage({ products }) {\n  const { setCount } = useContext(mainContext);\n  const prod2 = useSelector((state) => state.products.products);\n  // const username = useSelector((state) => state.users.value[1].username);\n  // const dispatch = useDispatch();\n  // let inImage = useRef();\n\n  // function changeUserName() {\n  //   const newName = \"Jonas\";\n  //   dispatch(changeName(newName));\n  // }\n  // function changeUserPicture() {\n  //   const newPic = inImage.current.value;\n  //   dispatch(changePicture(newPic));\n\n  // }\n  useEffect(() => {\n    setCount(prod.products.length);\n  }, []);\n\n  return (\n    <div className=\"products\">\n      {products.map((x, i) => (\n        <SingleProduct key={i} item={x} />\n      ))}\n    </div>\n  );\n}\n\nexport default IndexPage;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,mBAA1C;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;;;AAEA,SAASC,SAAT,OAAiC;EAAA;;EAAA,IAAd;IAAEC;EAAF,CAAc;EAC/B,MAAM;IAAEC;EAAF,IAAeL,UAAU,CAACE,WAAD,CAA/B;EACA,MAAMI,KAAK,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACH,QAAN,CAAeA,QAA3B,CAAzB,CAF+B,CAG/B;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EACAH,SAAS,CAAC,MAAM;IACdI,QAAQ,CAACG,IAAI,CAACJ,QAAL,CAAcK,MAAf,CAAR;EACD,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,UACGL,QAAQ,CAACM,GAAT,CAAa,CAACC,CAAD,EAAIC,CAAJ,kBACZ,QAAC,aAAD;MAAuB,IAAI,EAAED;IAA7B,GAAoBC,CAApB;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD;;GA3BQT,S;UAEOP,W;;;KAFPO,S;AA6BT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}