{"ast":null,"code":"var _jsxFileName = \"/Users/oila/Documents/Mokymai_TypeScript/TS10/TypeScript/12_paskaita_React/REACT/src/pages/GamePage.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Hash from \"../components/Hash\";\nimport { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet correctSpell = 0;\nlet wrongSpell = 0;\n\nfunction GamePage(_ref) {\n  _s();\n\n  let {\n    word,\n    setWord\n  } = _ref;\n  const nav = useNavigate();\n  const [allGuessed, setAllGuesed] = useState(false);\n  const [head, setHead] = useState(false);\n  const [body, setBody] = useState(false);\n  const [leftHand, setLeftHand] = useState(false);\n  const [rightHAnd, setRightHand] = useState(false);\n  const [leftLeg, setLeftLeg] = useState(false);\n  const [rightLEg, setRightLeg] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const inLetter = useRef();\n\n  function guessing() {\n    if (!inLetter.current.value) return;\n    const guessing = {\n      letter: inLetter.current.value\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(guessing)\n    };\n    fetch(\"http://localhost:4000/guessing\", options).then(res => res.json()).then(data => {\n      if (!data.error) {\n        let tarpinis = [...word];\n        tarpinis[data.index] = data.letter;\n        setWord(tarpinis);\n        correctSpell++;\n        if (correctSpell === word.length) return setAllGuesed(true);\n      } else {\n        wrongSpell++;\n        if (wrongSpell === 1) setHead(true);\n        if (wrongSpell === 2) setBody(true);\n        if (wrongSpell === 3) setLeftHand(true);\n        if (wrongSpell === 4) setRightHand(true);\n        if (wrongSpell === 5) setLeftLeg(true);\n\n        if (wrongSpell === 6) {\n          setRightLeg(true);\n          setGameOver(true);\n        }\n      }\n    });\n    inLetter.current.value = \"\";\n  }\n\n  function loadNewWord() {\n    fetch(\"http://localhost:4000/getnewword\").then(res => res.json()).then(data => {\n      setWord(data.word);\n      setAllGuesed(false);\n      correctSpell = 0;\n      wrongSpell = 0;\n      setHead(false);\n      setBody(false);\n      setLeftHand(false);\n      setRightHand(false);\n      setLeftLeg(false);\n      setRightLeg(false);\n      setGameOver(false);\n      nav(\"/game\");\n    });\n  }\n\n  function point(value) {\n    const data = {\n      email: selectedProd.email,\n      points: value\n    };\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"http://localhost:4000/points\", options).then(res => res.json()).then(data => {\n      console.log(data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-20 m-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"all_hashes\",\n      children: word.map((x, i) => /*#__PURE__*/_jsxDEV(Hash, {\n        leter: x\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inLetter,\n        type: \"text\",\n        name: \"\",\n        id: \"\",\n        placeholder: \"leter\",\n        maxLength: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), !allGuessed && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: guessing,\n        children: \"GUESS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this), allGuessed && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadNewWord,\n        children: \"START AGAIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hangman\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"hangman\",\n        src: \"https://pbs.twimg.com/media/DWQJJP6VQAEJUk6.jpg:large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), head && /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"hangman-head\",\n        src: \"https://pbs.twimg.com/media/DWQMCNyVwAAIejT.jpg:large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), body && /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"hangman-body\",\n        src: \"https://pbs.twimg.com/media/DWQNlzAU0AAnm7y.jpg:large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), leftHand && /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"hangman-leftarm\",\n        src: \"https://pbs.twimg.com/media/DWQPAdoU8AAgKqJ.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), rightHAnd && /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"hangman-rightarm\",\n        src: \"https://pbs.twimg.com/media/DWQI4CXV4AEmgKs.jpg:large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), leftLeg && /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"hangman-leftleg\",\n        src: \"https://pbs.twimg.com/media/DWQPAdoU8AAgKqJ.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), rightLEg && /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"hangman-rightleg\",\n        src: \"https://pbs.twimg.com/media/DWQI4CXV4AEmgKs.jpg:large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameover\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"GAME OVER\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadNewWord,\n        children: \"START AGAIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GamePage, \"LvE1XgfeoDMnaipsxkTE1CuH+8c=\", false, function () {\n  return [useNavigate];\n});\n\n_c = GamePage;\nexport default GamePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","Hash","useRef","useState","useNavigate","correctSpell","wrongSpell","GamePage","word","setWord","nav","allGuessed","setAllGuesed","head","setHead","body","setBody","leftHand","setLeftHand","rightHAnd","setRightHand","leftLeg","setLeftLeg","rightLEg","setRightLeg","gameOver","setGameOver","inLetter","guessing","current","value","letter","options","method","headers","JSON","stringify","fetch","then","res","json","data","error","tarpinis","index","length","loadNewWord","point","email","selectedProd","points","console","log","map","x","i"],"sources":["/Users/oila/Documents/Mokymai_TypeScript/TS10/TypeScript/12_paskaita_React/REACT/src/pages/GamePage.js"],"sourcesContent":["import React from \"react\";\nimport Hash from \"../components/Hash\";\nimport { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nlet correctSpell = 0;\nlet wrongSpell = 0;\n\nfunction GamePage({ word, setWord }) {\n  const nav = useNavigate();\n  const [allGuessed, setAllGuesed] = useState(false);\n  const [head, setHead] = useState(false);\n  const [body, setBody] = useState(false);\n  const [leftHand, setLeftHand] = useState(false);\n  const [rightHAnd, setRightHand] = useState(false);\n  const [leftLeg, setLeftLeg] = useState(false);\n  const [rightLEg, setRightLeg] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n\n  const inLetter = useRef();\n\n  function guessing() {\n    if (!inLetter.current.value) return;\n\n    const guessing = {\n      letter: inLetter.current.value,\n    };\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(guessing),\n    };\n\n    fetch(\"http://localhost:4000/guessing\", options)\n      .then((res) => res.json())\n      .then((data) => {\n        if (!data.error) {\n          let tarpinis = [...word];\n          tarpinis[data.index] = data.letter;\n          setWord(tarpinis);\n          correctSpell++;\n          if (correctSpell === word.length) return setAllGuesed(true);\n        } else {\n          wrongSpell++;\n          if (wrongSpell === 1) setHead(true);\n          if (wrongSpell === 2) setBody(true);\n          if (wrongSpell === 3) setLeftHand(true);\n          if (wrongSpell === 4) setRightHand(true);\n          if (wrongSpell === 5) setLeftLeg(true);\n          if (wrongSpell === 6) {\n            setRightLeg(true);\n            setGameOver(true);\n          }\n        }\n      });\n\n    inLetter.current.value = \"\";\n  }\n\n  function loadNewWord() {\n    fetch(\"http://localhost:4000/getnewword\")\n      .then((res) => res.json())\n      .then((data) => {\n        setWord(data.word);\n        setAllGuesed(false);\n        correctSpell = 0;\n        wrongSpell = 0;\n        setHead(false);\n        setBody(false);\n        setLeftHand(false);\n        setRightHand(false);\n        setLeftLeg(false);\n        setRightLeg(false);\n        setGameOver(false);\n\n        nav(\"/game\");\n      });\n  }\n\n  function point(value) {\n    const data = {\n      email: selectedProd.email,\n      points: value,\n    };\n\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    };\n\n    fetch(\"http://localhost:4000/points\", options)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n      });\n  }\n\n  return (\n    <div className={\"p-20 m-auto\"}>\n      <div className=\"all_hashes\">\n        {word.map((x, i) => (\n          <Hash leter={x} key={i} />\n        ))}\n      </div>\n      <div>\n        <input\n          ref={inLetter}\n          type=\"text\"\n          name=\"\"\n          id=\"\"\n          placeholder=\"leter\"\n          maxLength=\"1\"\n        />\n\n        {!allGuessed && <button onClick={guessing}>GUESS</button>}\n        {allGuessed && <button onClick={loadNewWord}>START AGAIN</button>}\n      </div>\n      <div className=\"hangman\">\n        <img\n          id=\"hangman\"\n          src=\"https://pbs.twimg.com/media/DWQJJP6VQAEJUk6.jpg:large\"\n        ></img>\n        {head && (\n          <img\n            id=\"hangman-head\"\n            src=\"https://pbs.twimg.com/media/DWQMCNyVwAAIejT.jpg:large\"\n          ></img>\n        )}\n        {body && (\n          <img\n            id=\"hangman-body\"\n            src=\"https://pbs.twimg.com/media/DWQNlzAU0AAnm7y.jpg:large\"\n          ></img>\n        )}\n        {leftHand && (\n          <img\n            id=\"hangman-leftarm\"\n            src=\"https://pbs.twimg.com/media/DWQPAdoU8AAgKqJ.jpg\"\n          ></img>\n        )}\n        {rightHAnd && (\n          <img\n            id=\"hangman-rightarm\"\n            src=\"https://pbs.twimg.com/media/DWQI4CXV4AEmgKs.jpg:large\"\n          ></img>\n        )}\n        {leftLeg && (\n          <img\n            id=\"hangman-leftleg\"\n            src=\"https://pbs.twimg.com/media/DWQPAdoU8AAgKqJ.jpg\"\n          ></img>\n        )}\n        {rightLEg && (\n          <img\n            id=\"hangman-rightleg\"\n            src=\"https://pbs.twimg.com/media/DWQI4CXV4AEmgKs.jpg:large\"\n          ></img>\n        )}\n      </div>\n      {gameOver && (\n        <div className=\"gameover\">\n          <h1>GAME OVER</h1>\n          <button onClick={loadNewWord}>START AGAIN</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default GamePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}