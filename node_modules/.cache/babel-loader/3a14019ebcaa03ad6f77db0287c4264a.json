{"ast":null,"code":"var _jsxFileName = \"/Users/oila/Documents/Mokymai_TypeScript/TS10/TypeScript/12_paskaita_React/REACT/src/components/ProgresBar.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProgresBar = _ref => {\n  _s();\n\n  let {\n    getCounter\n  } = _ref;\n  const [getHight, setHight] = useState(0);\n  const [getColor, setColor] = useState(\"#78c953\");\n\n  function addCounter() {\n    setCounter(inp.current.value.length);\n  }\n\n  useEffect(() => {\n    if (getCounter <= 10) {\n      setHight(getCounter * 10);\n    }\n\n    if (getCounter < 6) setColor(\"#78c953\");\n    if (getCounter > 6 && getCounter < 9) setColor(\"yellow\");\n    if (getCounter > 9) setColor(\"red\");\n  }, [getCounter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progressBar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progressWrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: getHight + \"%\",\n          backgroundColor: getColor\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProgresBar, \"rc3+BEdRLvBgzK6xoyo1u/U2RTY=\");\n\n_c = ProgresBar;\nexport default ProgresBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProgresBar\");","map":{"version":3,"names":["useState","ProgresBar","getCounter","getHight","setHight","getColor","setColor","addCounter","setCounter","inp","current","value","length","useEffect","height","backgroundColor"],"sources":["/Users/oila/Documents/Mokymai_TypeScript/TS10/TypeScript/12_paskaita_React/REACT/src/components/ProgresBar.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst ProgresBar = ({ getCounter }) => {\n  const [getHight, setHight] = useState(0);\n  const [getColor, setColor] = useState(\"#78c953\");\n\n  function addCounter() {\n    setCounter(inp.current.value.length);\n  }\n\n  useEffect(() => {\n    if (getCounter <= 10) {\n      setHight(getCounter * 10);\n    }\n\n    if (getCounter < 6) setColor(\"#78c953\");\n    if (getCounter > 6 && getCounter < 9) setColor(\"yellow\");\n    if (getCounter > 9) setColor(\"red\");\n  }, [getCounter]);\n\n  return (\n    <div className=\"progressBar\">\n      <div className=\"progressWrapper\">\n        <div\n          style={{ height: getHight + \"%\", backgroundColor: getColor }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgresBar;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,UAAU,GAAG,QAAoB;EAAA;;EAAA,IAAnB;IAAEC;EAAF,CAAmB;EACrC,MAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBJ,QAAQ,CAAC,CAAD,CAArC;EACA,MAAM,CAACK,QAAD,EAAWC,QAAX,IAAuBN,QAAQ,CAAC,SAAD,CAArC;;EAEA,SAASO,UAAT,GAAsB;IACpBC,UAAU,CAACC,GAAG,CAACC,OAAJ,CAAYC,KAAZ,CAAkBC,MAAnB,CAAV;EACD;;EAEDC,SAAS,CAAC,MAAM;IACd,IAAIX,UAAU,IAAI,EAAlB,EAAsB;MACpBE,QAAQ,CAACF,UAAU,GAAG,EAAd,CAAR;IACD;;IAED,IAAIA,UAAU,GAAG,CAAjB,EAAoBI,QAAQ,CAAC,SAAD,CAAR;IACpB,IAAIJ,UAAU,GAAG,CAAb,IAAkBA,UAAU,GAAG,CAAnC,EAAsCI,QAAQ,CAAC,QAAD,CAAR;IACtC,IAAIJ,UAAU,GAAG,CAAjB,EAAoBI,QAAQ,CAAC,KAAD,CAAR;EACrB,CARQ,EAQN,CAACJ,UAAD,CARM,CAAT;EAUA,oBACE;IAAK,SAAS,EAAC,aAAf;IAAA,uBACE;MAAK,SAAS,EAAC,iBAAf;MAAA,uBACE;QACE,KAAK,EAAE;UAAEY,MAAM,EAAEX,QAAQ,GAAG,GAArB;UAA0BY,eAAe,EAAEV;QAA3C;MADT;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AASD,CA3BD;;GAAMJ,U;;KAAAA,U;AA6BN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}