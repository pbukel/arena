{"ast":null,"code":"var _jsxFileName = \"/Users/oila/Documents/Mokymai_TypeScript/TS10/TypeScript/12_paskaita_React/REACT/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport movies from \"./assets/movies.json\";\nimport Movie from \"./components/Movie\";\nimport Modal from \"./components/Modal\";\nimport FavoritePage from \"./components/FavModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [getModal, setModal] = useState(false);\n  const [getModalItem, setModalItem] = useState([]);\n  const [getFavorites, setFavorites] = useState([]);\n  const [getShowFav, setShowFav] = useState(false);\n  const slicedArray = movies.slice(0, 20);\n\n  function showFav() {\n    setShowFav(true);\n  }\n\n  const [getAnim, setAnim] = useState(0);\n\n  function checking(item) {\n    setAnim(0);\n    if (item.includes(\"Animaciniai\")) setAnim(getAnim + 1); // if (item.includes(\"Dramos\")) dram++;\n    // if (item.includes(\"Veiksmo\")) veiks++;\n    // if (item.includes(\"Siaubo\")) horr++;\n  } //   getFavorites.map((x) => checking(x.genre));\n  //   console.log(anim, dram, veiks, horr);\n\n\n  useEffect(() => {\n    getFavorites.map(x => checking(x.genre));\n  }, [getFavorites]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fav\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showFav,\n        children: [\"FAVORITES (\", getFavorites.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"allmovies\",\n      children: [slicedArray.map((x, i) => /*#__PURE__*/_jsxDEV(Movie, {\n        getModal: getModal,\n        setModal: setModal,\n        item: x,\n        setModalItem: setModalItem\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)), getModal && /*#__PURE__*/_jsxDEV(Modal, {\n        setModal: setModal,\n        item: getModalItem,\n        setFavorites: setFavorites,\n        getFavorites: getFavorites\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), getShowFav && /*#__PURE__*/_jsxDEV(FavoritePage, {\n        getFavorites: getFavorites,\n        setShowFav: setShowFav,\n        setFavorites: setFavorites,\n        getAnim: getAnim\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"VRkY9QQe9XZJapYa2oZVpUVd1O4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","movies","Movie","Modal","FavoritePage","App","getModal","setModal","getModalItem","setModalItem","getFavorites","setFavorites","getShowFav","setShowFav","slicedArray","slice","showFav","getAnim","setAnim","checking","item","includes","map","x","genre","length","i"],"sources":["/Users/oila/Documents/Mokymai_TypeScript/TS10/TypeScript/12_paskaita_React/REACT/src/App.js"],"sourcesContent":["import \"./App.css\";\n\nimport { useState, useEffect, useRef } from \"react\";\nimport movies from \"./assets/movies.json\";\nimport Movie from \"./components/Movie\";\nimport Modal from \"./components/Modal\";\nimport FavoritePage from \"./components/FavModal\";\n\nfunction App() {\n  const [getModal, setModal] = useState(false);\n  const [getModalItem, setModalItem] = useState([]);\n  const [getFavorites, setFavorites] = useState([]);\n  const [getShowFav, setShowFav] = useState(false);\n\n  const slicedArray = movies.slice(0, 20);\n\n  function showFav() {\n    setShowFav(true);\n  }\n\n  const [getAnim, setAnim] = useState(0);\n\n  function checking(item) {\n    setAnim(0);\n    if (item.includes(\"Animaciniai\")) setAnim(getAnim + 1);\n    // if (item.includes(\"Dramos\")) dram++;\n    // if (item.includes(\"Veiksmo\")) veiks++;\n    // if (item.includes(\"Siaubo\")) horr++;\n  }\n\n  //   getFavorites.map((x) => checking(x.genre));\n  //   console.log(anim, dram, veiks, horr);\n\n  useEffect(() => {\n    getFavorites.map((x) => checking(x.genre));\n  }, [getFavorites]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"fav\">\n        <button onClick={showFav}>FAVORITES ({getFavorites.length})</button>\n      </div>\n      <div className=\"allmovies\">\n        {slicedArray.map((x, i) => (\n          <Movie\n            getModal={getModal}\n            setModal={setModal}\n            key={i}\n            item={x}\n            setModalItem={setModalItem}\n          />\n        ))}\n\n        {getModal && (\n          <Modal\n            setModal={setModal}\n            item={getModalItem}\n            setFavorites={setFavorites}\n            getFavorites={getFavorites}\n          />\n        )}\n        {getShowFav && (\n          <FavoritePage\n            getFavorites={getFavorites}\n            setShowFav={setShowFav}\n            setFavorites={setFavorites}\n            getAnim={getAnim}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AAEA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBT,QAAQ,CAAC,KAAD,CAArC;EACA,MAAM,CAACU,YAAD,EAAeC,YAAf,IAA+BX,QAAQ,CAAC,EAAD,CAA7C;EACA,MAAM,CAACY,YAAD,EAAeC,YAAf,IAA+Bb,QAAQ,CAAC,EAAD,CAA7C;EACA,MAAM,CAACc,UAAD,EAAaC,UAAb,IAA2Bf,QAAQ,CAAC,KAAD,CAAzC;EAEA,MAAMgB,WAAW,GAAGb,MAAM,CAACc,KAAP,CAAa,CAAb,EAAgB,EAAhB,CAApB;;EAEA,SAASC,OAAT,GAAmB;IACjBH,UAAU,CAAC,IAAD,CAAV;EACD;;EAED,MAAM,CAACI,OAAD,EAAUC,OAAV,IAAqBpB,QAAQ,CAAC,CAAD,CAAnC;;EAEA,SAASqB,QAAT,CAAkBC,IAAlB,EAAwB;IACtBF,OAAO,CAAC,CAAD,CAAP;IACA,IAAIE,IAAI,CAACC,QAAL,CAAc,aAAd,CAAJ,EAAkCH,OAAO,CAACD,OAAO,GAAG,CAAX,CAAP,CAFZ,CAGtB;IACA;IACA;EACD,CApBY,CAsBb;EACA;;;EAEAlB,SAAS,CAAC,MAAM;IACdW,YAAY,CAACY,GAAb,CAAkBC,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACC,KAAH,CAAhC;EACD,CAFQ,EAEN,CAACd,YAAD,CAFM,CAAT;EAIA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAK,SAAS,EAAC,KAAf;MAAA,uBACE;QAAQ,OAAO,EAAEM,OAAjB;QAAA,0BAAsCN,YAAY,CAACe,MAAnD;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE;MAAK,SAAS,EAAC,WAAf;MAAA,WACGX,WAAW,CAACQ,GAAZ,CAAgB,CAACC,CAAD,EAAIG,CAAJ,kBACf,QAAC,KAAD;QACE,QAAQ,EAAEpB,QADZ;QAEE,QAAQ,EAAEC,QAFZ;QAIE,IAAI,EAAEgB,CAJR;QAKE,YAAY,EAAEd;MALhB,GAGOiB,CAHP;QAAA;QAAA;QAAA;MAAA,QADD,CADH,EAWGpB,QAAQ,iBACP,QAAC,KAAD;QACE,QAAQ,EAAEC,QADZ;QAEE,IAAI,EAAEC,YAFR;QAGE,YAAY,EAAEG,YAHhB;QAIE,YAAY,EAAED;MAJhB;QAAA;QAAA;QAAA;MAAA,QAZJ,EAmBGE,UAAU,iBACT,QAAC,YAAD;QACE,YAAY,EAAEF,YADhB;QAEE,UAAU,EAAEG,UAFd;QAGE,YAAY,EAAEF,YAHhB;QAIE,OAAO,EAAEM;MAJX;QAAA;QAAA;QAAA;MAAA,QApBJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmCD;;GAhEQZ,G;;KAAAA,G;AAkET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}